/**
 * Generated by orval v7.7.0 üç∫
 * Do not edit manually.
 * Project Admin API
 * OpenAPI spec version: 1.0
 */
export interface AuthDto {
    login: string;
    password: string;
}

export interface AuthResponse {
    authToken: string;
}

export type ScummerStarRate = (typeof ScummerStarRate)[keyof typeof ScummerStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScummerStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export type ScummerCategory = (typeof ScummerCategory)[keyof typeof ScummerCategory];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScummerCategory = {
    INVESTMENTS: 'INVESTMENTS',
    TRADER: 'TRADER',
    CAPPER: 'CAPPER',
    GAME: 'GAME',
    CASINO: 'CASINO',
    EXCHANGES: 'EXCHANGES',
    TRADING: 'TRADING',
    BROKER: 'BROKER',
    TECHNOLOGIES: 'TECHNOLOGIES',
    WORK: 'WORK',
} as const;

export interface ScammerCreateDto {
    url: string;
    name: string;
    avatar_url: string;
    starRate: ScummerStarRate;
    category: ScummerCategory;
    rate: number;
    subcribers: number;
    reports: number;
    reviews: number;
    shortDescription: string;
    tgUsername: string;
    reviewDate: Date;
}

export type ScammerDemoProfileItemCategory =
    (typeof ScammerDemoProfileItemCategory)[keyof typeof ScammerDemoProfileItemCategory];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerDemoProfileItemCategory = {
    INVESTMENTS: 'INVESTMENTS',
    TRADER: 'TRADER',
    CAPPER: 'CAPPER',
    GAME: 'GAME',
    CASINO: 'CASINO',
    EXCHANGES: 'EXCHANGES',
    TRADING: 'TRADING',
    BROKER: 'BROKER',
    TECHNOLOGIES: 'TECHNOLOGIES',
    WORK: 'WORK',
} as const;

export type ScammerDemoProfileItemVisible =
    (typeof ScammerDemoProfileItemVisible)[keyof typeof ScammerDemoProfileItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerDemoProfileItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface ScammerDemoProfileItem {
    id: number;
    name: string;
    positionTop: number;
    tgUsername: string;
    category: ScammerDemoProfileItemCategory;
    visible: ScammerDemoProfileItemVisible;
    notification: boolean;
}

export interface ScammerDemoProfileItemList {
    items: ScammerDemoProfileItem[];
}

export type ScammerProfileItemStarRate = (typeof ScammerProfileItemStarRate)[keyof typeof ScammerProfileItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerProfileItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export type ScammerProfileItemVisible = (typeof ScammerProfileItemVisible)[keyof typeof ScammerProfileItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerProfileItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export type ScammerProfileItemCategory = (typeof ScammerProfileItemCategory)[keyof typeof ScammerProfileItemCategory];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerProfileItemCategory = {
    INVESTMENTS: 'INVESTMENTS',
    TRADER: 'TRADER',
    CAPPER: 'CAPPER',
    GAME: 'GAME',
    CASINO: 'CASINO',
    EXCHANGES: 'EXCHANGES',
    TRADING: 'TRADING',
    BROKER: 'BROKER',
    TECHNOLOGIES: 'TECHNOLOGIES',
    WORK: 'WORK',
} as const;

export interface ScammerProfileItem {
    id: number;
    url: string;
    name: string;
    avatar_url: string;
    params: string;
    positionTop: number;
    starRate: ScammerProfileItemStarRate;
    rate: number;
    subcribers: number;
    reports: number;
    reviews: number;
    shortDescription: string;
    tgUsername: string;
    visible: ScammerProfileItemVisible;
    category: ScammerProfileItemCategory;
    createdAt: Date;
    reviewDate: Date;
    profileLikes: number;
    profileViews: number;
    about: string;
    notification: boolean;
    title: string;
    description: string;
    lastmod: Date;
}

export type ScammerProfileAboutVisible = (typeof ScammerProfileAboutVisible)[keyof typeof ScammerProfileAboutVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerProfileAboutVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface ScammerProfileAbout {
    visible: ScammerProfileAboutVisible;
    profileLikes: number;
    profileViews: number;
    about: string;
    params: string;
}

export type ScummerVisible = (typeof ScummerVisible)[keyof typeof ScummerVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScummerVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface ScammerEditAboutDto {
    visible: ScummerVisible;
    profileLikes: number;
    profileViews: number;
    about: string;
    params: string;
}

export interface ScammerUpdatePositionItemDto {
    id: number;
    positionTop: number;
}

export interface ScammerUpdatePositionListDto {
    items: ScammerUpdatePositionItemDto[];
}

export type CommentStarRate = (typeof CommentStarRate)[keyof typeof CommentStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommentStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export interface ScammerCreateComment {
    name: string;
    comment: string;
    date: Date;
    starRate: CommentStarRate;
}

export type ScammerCommentItemStarRate = (typeof ScammerCommentItemStarRate)[keyof typeof ScammerCommentItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScammerCommentItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export interface ScammerCommentItem {
    id: number;
    name: string;
    comment: string;
    projectId: number;
    date: Date;
    starRate: ScammerCommentItemStarRate;
}

export interface ScammerCommentList {
    items: ScammerCommentItem[];
}

export interface CreateSeoDto {
    title: string;
    description: string;
}

export interface SeoItem {
    title: string;
    description: string;
}

export interface PostCreatePreviewDto {
    url: string;
    title: string;
    likes: number;
    views: number;
    readTime: number;
    date: Date;
}

export interface PostEditContentDto {
    post: string;
}

export interface PostPreviewItem {
    id: number;
    title: string;
    likes: number;
    views: number;
    date: Date;
    notification: boolean;
}

export interface PostPreviewList {
    items: PostPreviewItem[];
}

export interface PostItem {
    id: number;
    url: string;
    title: string;
    post: string;
    likes: number;
    views: number;
    readTime: number;
    date: Date;
    notification: boolean;
    seo_title: string;
    seo_description: string;
    lastmod: Date;
}

export interface PostCreateComment {
    name: string;
    comment: string;
    date: Date;
    starRate: CommentStarRate;
}

export type PostCommentItemStarRate = (typeof PostCommentItemStarRate)[keyof typeof PostCommentItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostCommentItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export interface PostCommentItem {
    id: number;
    name: string;
    comment: string;
    postId: number;
    date: Date;
    starRate: PostCommentItemStarRate;
}

export interface PostCommentList {
    items: PostCommentItem[];
}

export type HeaderBannerType = (typeof HeaderBannerType)[keyof typeof HeaderBannerType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HeaderBannerType = {
    YOUTUBE: 'YOUTUBE',
    LAWYER: 'LAWYER',
} as const;

export interface HeaderBannerEditDto {
    url: string;
    bannerType: HeaderBannerType;
}

export type HeaderBannerItemBannerType = (typeof HeaderBannerItemBannerType)[keyof typeof HeaderBannerItemBannerType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const HeaderBannerItemBannerType = {
    YOUTUBE: 'YOUTUBE',
    LAWYER: 'LAWYER',
} as const;

export interface HeaderBannerItem {
    id: number;
    url: string;
    bannerType: HeaderBannerItemBannerType;
}

export interface CreateImagesBannerDto {
    url: string;
    name: string;
    image: string;
}

export interface ImagesBannerItem {
    id: number;
    name: string;
    url: string;
    image: string;
}

export interface ImagesBannerList {
    items: ImagesBannerItem[];
}

export interface EditLawyerBannerDto {
    name: string;
    title: string;
    avatar: string;
    description: string;
    reviews: number;
    reports: number;
    tgUrl: string;
    detailsUrl: string;
}

export type LawyerBannerItemVisible = (typeof LawyerBannerItemVisible)[keyof typeof LawyerBannerItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LawyerBannerItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface LawyerBannerItem {
    id: number;
    visible: LawyerBannerItemVisible;
    name: string;
    title: string;
    avatar: string;
    description: string;
    reviews: number;
    reports: number;
    tgUrl: string;
    detailsUrl: string;
}

export interface EditFooterStripDto {
    tgUrl: string;
    youtubeUrl: string;
}

export interface FooterStripItem {
    id: number;
    youtubeUrl: string;
    tgUrl: string;
}

export type YoutubeLayoutVisible = (typeof YoutubeLayoutVisible)[keyof typeof YoutubeLayoutVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const YoutubeLayoutVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface EditYoutubeLayoutDto {
    visible: YoutubeLayoutVisible;
    name: string;
    description: string;
    videoId: string;
    tgUrl: string;
    youtubeUrl: string;
}

export type YoutubeLayoutItemVisible = (typeof YoutubeLayoutItemVisible)[keyof typeof YoutubeLayoutItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const YoutubeLayoutItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface YoutubeLayoutItem {
    id: number;
    visible: YoutubeLayoutItemVisible;
    name: string;
    description: string;
    videoId: string;
    tgUrl: string;
    youtubeUrl: string;
}

export type LawyerLayoutVisible = (typeof LawyerLayoutVisible)[keyof typeof LawyerLayoutVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LawyerLayoutVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface EditLawyerLayoutDto {
    visible: LawyerLayoutVisible;
    name: string;
    description: string;
    avatar: string;
    tgUrl: string;
    detailsUrl: string;
}

export type LawyerLayoutItemVisible = (typeof LawyerLayoutItemVisible)[keyof typeof LawyerLayoutItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LawyerLayoutItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface LawyerLayoutItem {
    id: number;
    visible: LawyerLayoutItemVisible;
    name: string;
    description: string;
    avatar: string;
    tgUrl: string;
    detailsUrl: string;
}

export interface ReviewItem {
    id: number;
    username: string;
    userContact: string;
    comment: string;
    projectName: string;
    projectUrl: string;
    createdAt: Date;
}

export interface ReviewList {
    items: ReviewItem[];
}

export interface EditLawyerProfileDto {
    profile: string;
}

export type LawyerProfileItemVisible = (typeof LawyerProfileItemVisible)[keyof typeof LawyerProfileItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LawyerProfileItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface LawyerProfileItem {
    id: number;
    profile: string;
    visible: LawyerProfileItemVisible;
}

export interface TestDto {
    number: number;
}

export type LawyerVisibleVisible = (typeof LawyerVisibleVisible)[keyof typeof LawyerVisibleVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LawyerVisibleVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface LawyerVisible {
    visible: LawyerVisibleVisible;
}

export type CommentCreateItemCommentType =
    (typeof CommentCreateItemCommentType)[keyof typeof CommentCreateItemCommentType];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommentCreateItemCommentType = {
    SCAMMER: 'SCAMMER',
    VERIFIED: 'VERIFIED',
    NEWS: 'NEWS',
    POST: 'POST',
} as const;

export type CommentCreateItemStarRate = (typeof CommentCreateItemStarRate)[keyof typeof CommentCreateItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CommentCreateItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export interface CommentCreateItem {
    id: number;
    name: string;
    comment: string;
    projectId: string;
    date: Date;
    commentType: CommentCreateItemCommentType;
    starRate: CommentCreateItemStarRate;
}

export interface CommentCreateItemList {
    items: CommentCreateItem[];
}

export interface NewsCreateDto {
    url: string;
    title: string;
    avatar: string;
    news: string;
    likes: number;
    views: number;
    date: Date;
}

export interface NewsPreviewItem {
    id: number;
    title: string;
    date: Date;
    notification: boolean;
}

export interface NewsPreviewList {
    items: NewsPreviewItem[];
}

export interface NewsItem {
    id: number;
    url: string;
    title: string;
    avatar: string;
    news: string;
    likes: number;
    views: number;
    date: Date;
    notification: boolean;
    seo_title: string;
    seo_description: string;
    lastmod: Date;
}

export interface NewsCreateComment {
    name: string;
    comment: string;
    date: Date;
    starRate: CommentStarRate;
}

export type NewsCommentItemStarRate = (typeof NewsCommentItemStarRate)[keyof typeof NewsCommentItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NewsCommentItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export interface NewsCommentItem {
    id: number;
    name: string;
    comment: string;
    newsId: number;
    date: Date;
    starRate: NewsCommentItemStarRate;
}

export interface NewsCommentList {
    items: NewsCommentItem[];
}

export type VerifiedStarRate = (typeof VerifiedStarRate)[keyof typeof VerifiedStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export type VerifiedCategory = (typeof VerifiedCategory)[keyof typeof VerifiedCategory];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedCategory = {
    INVESTMENTS: 'INVESTMENTS',
    TRADER: 'TRADER',
    CAPPER: 'CAPPER',
    GAME: 'GAME',
    CASINO: 'CASINO',
    EXCHANGES: 'EXCHANGES',
    TRADING: 'TRADING',
    BROKER: 'BROKER',
    TECHNOLOGIES: 'TECHNOLOGIES',
    WORK: 'WORK',
} as const;

export interface VerifiedCreateDto {
    url: string;
    name: string;
    avatar_url: string;
    starRate: VerifiedStarRate;
    category: VerifiedCategory;
    rate: number;
    subcribers: number;
    profit: number;
    reviews: number;
    shortDescription: string;
    tgUsername: string;
    reviewDate: Date;
}

export type VerifiedDemoProfileItemCategory =
    (typeof VerifiedDemoProfileItemCategory)[keyof typeof VerifiedDemoProfileItemCategory];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedDemoProfileItemCategory = {
    INVESTMENTS: 'INVESTMENTS',
    TRADER: 'TRADER',
    CAPPER: 'CAPPER',
    GAME: 'GAME',
    CASINO: 'CASINO',
    EXCHANGES: 'EXCHANGES',
    TRADING: 'TRADING',
    BROKER: 'BROKER',
    TECHNOLOGIES: 'TECHNOLOGIES',
    WORK: 'WORK',
} as const;

export type VerifiedDemoProfileItemVisible =
    (typeof VerifiedDemoProfileItemVisible)[keyof typeof VerifiedDemoProfileItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedDemoProfileItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface VerifiedDemoProfileItem {
    id: number;
    name: string;
    positionTop: number;
    tgUsername: string;
    category: VerifiedDemoProfileItemCategory;
    visible: VerifiedDemoProfileItemVisible;
    notification: boolean;
}

export interface VerifiedDemoProfileItemList {
    items: VerifiedDemoProfileItem[];
}

export type VerifiedProfileItemStarRate =
    (typeof VerifiedProfileItemStarRate)[keyof typeof VerifiedProfileItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedProfileItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export type VerifiedProfileItemVisible = (typeof VerifiedProfileItemVisible)[keyof typeof VerifiedProfileItemVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedProfileItemVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export type VerifiedProfileItemCategory =
    (typeof VerifiedProfileItemCategory)[keyof typeof VerifiedProfileItemCategory];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedProfileItemCategory = {
    INVESTMENTS: 'INVESTMENTS',
    TRADER: 'TRADER',
    CAPPER: 'CAPPER',
    GAME: 'GAME',
    CASINO: 'CASINO',
    EXCHANGES: 'EXCHANGES',
    TRADING: 'TRADING',
    BROKER: 'BROKER',
    TECHNOLOGIES: 'TECHNOLOGIES',
    WORK: 'WORK',
} as const;

export interface VerifiedProfileItem {
    id: number;
    url: string;
    name: string;
    avatar_url: string;
    params: string;
    positionTop: number;
    starRate: VerifiedProfileItemStarRate;
    rate: number;
    subcribers: number;
    profit: number;
    reviews: number;
    shortDescription: string;
    tgUsername: string;
    visible: VerifiedProfileItemVisible;
    category: VerifiedProfileItemCategory;
    createdAt: Date;
    reviewDate: Date;
    profileLikes: number;
    profileViews: number;
    about: string;
    notification: boolean;
    title: string;
    description: string;
    lastmod: Date;
}

export type VerifiedProfileAboutVisible =
    (typeof VerifiedProfileAboutVisible)[keyof typeof VerifiedProfileAboutVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedProfileAboutVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface VerifiedProfileAbout {
    visible: VerifiedProfileAboutVisible;
    profileLikes: number;
    profileViews: number;
    about: string;
    params: string;
}

export type VerifiedVisible = (typeof VerifiedVisible)[keyof typeof VerifiedVisible];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedVisible = {
    VISIBLE: 'VISIBLE',
    HIDDEN: 'HIDDEN',
} as const;

export interface VerifiedEditAboutDto {
    visible: VerifiedVisible;
    profileLikes: number;
    profileViews: number;
    about: string;
    params: string;
}

export interface VerifiedUpdatePositionItemDto {
    id: number;
    positionTop: number;
}

export interface VerifiedUpdatePositionListDto {
    items: VerifiedUpdatePositionItemDto[];
}

export interface VerifiedCreateComment {
    name: string;
    comment: string;
    date: Date;
    starRate: CommentStarRate;
}

export type VerifiedCommentItemStarRate =
    (typeof VerifiedCommentItemStarRate)[keyof typeof VerifiedCommentItemStarRate];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const VerifiedCommentItemStarRate = {
    NUMBER_1: '1',
    NUMBER_2: '2',
    NUMBER_3: '3',
    NUMBER_4: '4',
    NUMBER_5: '5',
} as const;

export interface VerifiedCommentItem {
    id: number;
    name: string;
    comment: string;
    projectId: number;
    date: Date;
    starRate: VerifiedCommentItemStarRate;
}

export interface VerifiedCommentList {
    items: VerifiedCommentItem[];
}
